# This is a basic workflow to help you get started with Actions

name: Auto deploy prod

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "prod" branch
  push:
    branches: [ "prod" ]

  # Bricoulage
  repository_dispatch:
    types: dark-magic

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set Git config
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "Github Actions"

      - name: Merge main in prod
        run: |
          git fetch --unshallow
          git checkout prod
          git pull
          git merge --no-ff origin/main -m "Auto-merge main to prod"
          git push
      
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.HOST_IP }} >> ~/.ssh/known_hosts
        
      - name: Deploy with rsync
        run: rsync -avz ./ ${{ secrets.HOST_USERNAME }}@${{ secrets.HOST_IP }}:/home/${{ secrets.HOST_USERNAME }}/bots/vroumbot_prod

      # Does not work if an admin is already on screen
      - name: Restart Bot
        run: |
          ssh ${{ secrets.HOST_USERNAME }}@${{ secrets.HOST_IP }} 'screen -r "vroum" -X stuff "^C"'
          sleep 10s
          ssh ${{ secrets.HOST_USERNAME }}@${{ secrets.HOST_IP }} 'screen -r "vroum" -X stuff "python main.py^M"'

      - name: Log if payload
        run: |
          echo "Who: ${{ github.event.client_payload.who }}"
          echo "When: ${{ github.event.client_payload.when }}"
          echo "Where: ${{ github.event.client_payload.where }}"
